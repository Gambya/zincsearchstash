// Code generated by MockGen. DO NOT EDIT.
// Source: ./pkg/zincsearch/zincsearch.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockZincSearchService is a mock of ZincSearchService interface.
type MockZincSearchService struct {
	ctrl     *gomock.Controller
	recorder *MockZincSearchServiceMockRecorder
}

// MockZincSearchServiceMockRecorder is the mock recorder for MockZincSearchService.
type MockZincSearchServiceMockRecorder struct {
	mock *MockZincSearchService
}

// NewMockZincSearchService creates a new mock instance.
func NewMockZincSearchService(ctrl *gomock.Controller) *MockZincSearchService {
	mock := &MockZincSearchService{ctrl: ctrl}
	mock.recorder = &MockZincSearchServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockZincSearchService) EXPECT() *MockZincSearchServiceMockRecorder {
	return m.recorder
}

// Insert mocks base method.
func (m *MockZincSearchService) Insert(data string) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Insert", data)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Insert indicates an expected call of Insert.
func (mr *MockZincSearchServiceMockRecorder) Insert(data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Insert", reflect.TypeOf((*MockZincSearchService)(nil).Insert), data)
}
