// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/services/record.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRecord is a mock of Record interface.
type MockRecord struct {
	ctrl     *gomock.Controller
	recorder *MockRecordMockRecorder
}

// MockRecordMockRecorder is the mock recorder for MockRecord.
type MockRecordMockRecorder struct {
	mock *MockRecord
}

// NewMockRecord creates a new mock instance.
func NewMockRecord(ctrl *gomock.Controller) *MockRecord {
	mock := &MockRecord{ctrl: ctrl}
	mock.recorder = &MockRecordMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRecord) EXPECT() *MockRecordMockRecorder {
	return m.recorder
}

// DataInsert mocks base method.
func (m *MockRecord) DataInsert(data interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DataInsert", data)
	ret0, _ := ret[0].(error)
	return ret0
}

// DataInsert indicates an expected call of DataInsert.
func (mr *MockRecordMockRecorder) DataInsert(data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DataInsert", reflect.TypeOf((*MockRecord)(nil).DataInsert), data)
}
